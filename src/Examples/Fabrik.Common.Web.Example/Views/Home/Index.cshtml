@model Fabrik.Common.Web.Example.Models.HomeView
@{
    ViewBag.Title = "Home Page";
}

@section Scripts {
    <script type="text/javascript">

        $(function () {

            $("form").submit(function (e) {
                var $form = $(this);
                var validator = $form.data("validator");

                if (!validator || !$form.valid())
                    return;
                
                e.preventDefault();

                $.ajax({
                    url: "@Url.Action("index")",
                    type: "POST",
                    data: $form.serialize(),
                    statusCode: {
                        400: function(xhr, status, err) {                           
                            var errors = $.parseJSON(err);
                            validator.showErrors(errors);
                        }
                    },
                    success: function() {
                        // clear errors
                        // validator.resetForm();
                        // just reload the page for now
                        location.reload(true);
                    }
                });
            });
        });
    
    </script>
}

<h2>@Model.Message</h2>

<h3>@Html.IfElse(DateTime.UtcNow.Hour < 12, "Good morning!", "Good afternoon!")</h3>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
            <p>@Html.DescriptionFor(model => model.Name)</p>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Age)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Age)
            @Html.ValidationMessageFor(model => model.Age)
            <p>@Html.DescriptionFor(model => model.Age)</p>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SubscriptionType, Model.SubscriptionTypes)
            @Html.ValidationMessageFor(model => model.SubscriptionType)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}